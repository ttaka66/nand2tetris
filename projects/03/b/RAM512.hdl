// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[6..8], a=lram64a, b=lram64b, c=lram64c, d=lram64d, e=lram64e, f=lram64f, g=lram64g, h=lram64h);
    RAM64(in=in, load=lram64a, address=address[0..5], out=rram64a);
    RAM64(in=in, load=lram64b, address=address[0..5], out=rram64b);
    RAM64(in=in, load=lram64c, address=address[0..5], out=rram64c);
    RAM64(in=in, load=lram64d, address=address[0..5], out=rram64d);
    RAM64(in=in, load=lram64e, address=address[0..5], out=rram64e);
    RAM64(in=in, load=lram64f, address=address[0..5], out=rram64f);
    RAM64(in=in, load=lram64g, address=address[0..5], out=rram64g);
    RAM64(in=in, load=lram64h, address=address[0..5], out=rram64h);
    Mux8Way16(a=rram64a, b=rram64b, c=rram64c, d=rram64d, e=rram64e, f=rram64f, g=rram64g, h=rram64h, sel=address[6..8], out=out);
}
