// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[12..13], a=lram4Ka, b=lram4Kb, c=lram4Kc, d=lram4Kd);
    RAM4K(in=in, load=lram4Ka, address=address[0..11], out=rram4Ka);
    RAM4K(in=in, load=lram4Kb, address=address[0..11], out=rram4Kb);
    RAM4K(in=in, load=lram4Kc, address=address[0..11], out=rram4Kc);
    RAM4K(in=in, load=lram4Kd, address=address[0..11], out=rram4Kd);
    Mux4Way16(a=rram4Ka, b=rram4Kb, c=rram4Kc, d=rram4Kd, sel=address[12..13], out=out);
}
